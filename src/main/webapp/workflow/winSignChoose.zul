<?link rel="shortcut icon" href="/imgs/favicon.ico" type="image/x-icon"?>
<?page title="Подпись" contentType="text/html;charset=UTF-8"?>
<window id="winPdfViewer" mode="modal" closable="true" height="140px" width="300px" title="Подпись приказов" position="top, center"  apply="org.edec.workflow.ctrl.WinSignChoose">
		
		<vbox pack="center" align="center">
		
			<label id="lbInfo"/>
			
			<label id="lbUser"/>
			
			<progressmeter id="currMet" value="0" width="290px"/>
			
			<label id="lbProgress"/>
			
			<button id="btnSign" label="Подписать"></button>	
		
		</vbox>
		<!-- Основной скрипт для получения сертификата и подписи -->
		<script type="text/javascript">
			var client;
			/*Инициализация процесса подписи
	        * принимает base64 данные для подписания
	        */
	        function initSign()
	        {
		        client = new LssClient(jQuery).withBypass();
		        getCert();
	        }
	        
	        /*Получение сертификата и вызов функции на сервере*/
	        function getCert()
	        {
				client.selectCertificate()
					.done(function (response) {
						if (response.IsSuccessful) 
						{
							var resp={};
							var cert = $.parseJSON(response.CertificateJson);
							resp.issuer = cert.Issuer;
							resp.subject = cert.Subject;
							resp.serialNumber = cert.SerialNumber;
							resp.cert = cert.Base64RawData;
							
							//Вызов серверной фукции setCert	
							 zAu.send(new zk.Event(zk.Widget.$('$winPdfViewer'), "onCertIn", resp, {toServer:true}));	 		        						
						} 
						else 
						{
							// Операция завершилась с ошибкой.
							var error = response.ErrorMessage;
							//Вызов серверной функции прерывающей подпись
	
						}
					})
					.fail(function(error) {
						// Запрос не удалось отправить или программа
						// ViPNet Local Signature Service не смогла принять подключение.
						//Вызов серверной функции прерывающей подпись
						
					});
			}
			
			//Подписываем один документ
	        function signOne(base,cert,i)
	        {
				var options =
			        {
				        base64Data: base,
				        description: "Документ "+i,
				        documentName: "testF"+i+".pdf",
				        fileExtension: "pdf",
				        isAttached: true,
				        base64Certificate: cert,
			        };
			        
				    //Подписание с колбэком
			        client.sign(options).done(function(response)
			        {
				        if (response.IsSuccessful)
				        {
					        var fullresult={};
					        var res=response.SignedData;
					        var signCertificate = $.parseJSON(response.SignCertificateJson);
					        fullresult.Data=res;
					        fullresult.SerialNumber=signCertificate.SerialNumber;
					        fullresult.Step=i;
					        fullresult.Thumbprint=signCertificate.Thumbprint;
					        zAu.send(new zk.Event(zk.Widget.$('$winPdfViewer'), "onSignOne", fullresult, {toServer:true}));
				        }
				        else
				        {
				        	var error = response.ErrorMessage;
				        	zAu.send(new zk.Event(zk.Widget.$('$winPdfViewer'), "onErrorSign", response.ErrorMessage, {toServer:true}));
				        }
			        }).fail(function(error)
			        {
				        zAu.send(new zk.Event(zk.Widget.$('$winPdfViewer'), "onErrorSign", 'Ошибка при подписании. Запустите программу для электронной цифоровой подписи!!', {toServer:true}));
			        });
	        }
	        
		</script>
		
		<!-- Подключение сторонних библиотек -->
		<script type="text/javascript" src="../js/libs/lss-client.js"></script>
</window>